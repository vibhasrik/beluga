{"ast":null,"code":"var _jsxFileName = \"/Users/vibhasri_kandukuri/VSCode/beluga/my-react-app/src/components/QuestionsForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsForm = ({\n  location\n}) => {\n  _s();\n  const {\n    companyName\n  } = location.state;\n  const [questions, setQuestions] = useState([\"\", \"\", \"\"]);\n  const handleChange = (index, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index] = value;\n    setQuestions(newQuestions);\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, \"\"]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:5000/api/questions\", {\n      companyName,\n      questions\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Question \", index + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => handleChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsForm, \"1W87mLIxvQoetvY9UJsxILEgiiU=\");\n_c = QuestionsForm;\nexport default QuestionsForm;\n\n// import React, { useState } from 'react';\n\n// const QuestionsForm = () => {\n//     const [questions, setQuestions] = useState(['', '', '']);\n\n//     const handleChange = (index: number, value: string) => {\n//         const newQuestions = [...questions];\n//         newQuestions[index] = value;\n//         setQuestions(newQuestions);\n//     };\n\n//     const addQuestionField = () => {\n//         setQuestions([...questions, '']);\n//     };\n\n//     const handleSubmit = (event: React.FormEvent) => {\n//         event.preventDefault();\n//         // Here you would typically send the questions to your API\n//         console.log(questions);\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             {questions.map((question, index) => (\n//                 <div key={index}>\n//                     <label>\n//                         Question {index + 1}:\n//                         <input\n//                             type=\"text\"\n//                             value={question}\n//                             onChange={(e) => handleChange(index, e.target.value)}\n//                         />\n//                     </label>\n//                 </div>\n//             ))}\n//             <button type=\"button\" onClick={addQuestionField}>\n//                 Add More Questions\n//             </button>\n//             <button type=\"submit\">Submit Questions</button>\n//         </form>\n//     );\n// };\n\n// export default QuestionsForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionsForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QuestionsForm","location","_s","companyName","state","questions","setQuestions","handleChange","index","value","newQuestions","addQuestion","handleSubmit","e","preventDefault","post","onSubmit","children","map","question","type","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/vibhasri_kandukuri/VSCode/beluga/my-react-app/src/components/QuestionsForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Form.css\";\n\nconst QuestionsForm: React.FC<{\n  location: { state: { companyName: string } };\n}> = ({ location }) => {\n  const { companyName } = location.state;\n  const [questions, setQuestions] = useState([\"\", \"\", \"\"]);\n\n  const handleChange = (index: number, value: string) => {\n    const newQuestions = [...questions];\n    newQuestions[index] = value;\n    setQuestions(newQuestions);\n  };\n\n  const addQuestion = () => {\n    setQuestions([...questions, \"\"]);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:5000/api/questions\", {\n      companyName,\n      questions,\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {questions.map((question, index) => (\n        <div key={index}>\n          <label>\n            Question {index + 1}:\n            <input\n              type=\"text\"\n              value={question}\n              onChange={(e) => handleChange(index, e.target.value)}\n            />\n          </label>\n        </div>\n      ))}\n      <button type=\"button\" onClick={addQuestion}>\n        Add Question\n      </button>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default QuestionsForm;\n\n// import React, { useState } from 'react';\n\n// const QuestionsForm = () => {\n//     const [questions, setQuestions] = useState(['', '', '']);\n\n//     const handleChange = (index: number, value: string) => {\n//         const newQuestions = [...questions];\n//         newQuestions[index] = value;\n//         setQuestions(newQuestions);\n//     };\n\n//     const addQuestionField = () => {\n//         setQuestions([...questions, '']);\n//     };\n\n//     const handleSubmit = (event: React.FormEvent) => {\n//         event.preventDefault();\n//         // Here you would typically send the questions to your API\n//         console.log(questions);\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             {questions.map((question, index) => (\n//                 <div key={index}>\n//                     <label>\n//                         Question {index + 1}:\n//                         <input\n//                             type=\"text\"\n//                             value={question}\n//                             onChange={(e) => handleChange(index, e.target.value)}\n//                         />\n//                     </label>\n//                 </div>\n//             ))}\n//             <button type=\"button\" onClick={addQuestionField}>\n//                 Add More Questions\n//             </button>\n//             <button type=\"submit\">Submit Questions</button>\n//         </form>\n//     );\n// };\n\n// export default QuestionsForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,aAEJ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAY,CAAC,GAAGF,QAAQ,CAACG,KAAK;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAExD,MAAMW,YAAY,GAAGA,CAACC,KAAa,EAAEC,KAAa,KAAK;IACrD,MAAMC,YAAY,GAAG,CAAC,GAAGL,SAAS,CAAC;IACnCK,YAAY,CAACF,KAAK,CAAC,GAAGC,KAAK;IAC3BH,YAAY,CAACI,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE,EAAE,CAAC,CAAC;EAClC,CAAC;EAED,MAAMO,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMjB,KAAK,CAACkB,IAAI,CAAC,qCAAqC,EAAE;MACtDZ,WAAW;MACXE;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAMiB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,GAC1BZ,SAAS,CAACa,GAAG,CAAC,CAACC,QAAQ,EAAEX,KAAK,kBAC7BT,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,GAAO,WACI,EAACT,KAAK,GAAG,CAAC,EAAC,GACpB,eAAAT,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXX,KAAK,EAAEU,QAAS;UAChBE,QAAQ,EAAGR,CAAC,IAAKN,YAAY,CAACC,KAAK,EAAEK,CAAC,CAACS,MAAM,CAACb,KAAK;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC,GARAlB,KAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACN,CAAC,eACF3B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEhB,WAAY;MAAAM,QAAA,EAAC;IAE5C;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACxB,EAAA,CA5CIF,aAEJ;AAAA4B,EAAA,GAFI5B,aAEJ;AA4CF,eAAeA,aAAa;;AAE5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}