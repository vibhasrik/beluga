{"ast":null,"code":"var _jsxFileName = \"/Users/vibhasri_kandukuri/VSCode/beluga/my-react-app/src/components/QuestionsForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsForm = () => {\n  _s();\n  const [questions, setQuestions] = useState(['', '', '']);\n  const handleChange = (index, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index] = value;\n    setQuestions(newQuestions);\n  };\n  const addQuestionField = () => {\n    setQuestions([...questions, '']);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Here you would typically send the questions to your API\n    console.log(questions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Question \", index + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => handleChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addQuestionField,\n      children: \"Add More Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsForm, \"YK63H5U+U8/DCkJiX4s6TnTaEdk=\");\n_c = QuestionsForm;\nexport default QuestionsForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionsForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionsForm","_s","questions","setQuestions","handleChange","index","value","newQuestions","addQuestionField","handleSubmit","event","preventDefault","console","log","onSubmit","children","map","question","type","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/vibhasri_kandukuri/VSCode/beluga/my-react-app/src/components/QuestionsForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst QuestionsForm = () => {\n    const [questions, setQuestions] = useState(['', '', '']);\n\n    const handleChange = (index: number, value: string) => {\n        const newQuestions = [...questions];\n        newQuestions[index] = value;\n        setQuestions(newQuestions);\n    };\n\n    const addQuestionField = () => {\n        setQuestions([...questions, '']);\n    };\n\n    const handleSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        // Here you would typically send the questions to your API\n        console.log(questions);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {questions.map((question, index) => (\n                <div key={index}>\n                    <label>\n                        Question {index + 1}:\n                        <input\n                            type=\"text\"\n                            value={question}\n                            onChange={(e) => handleChange(index, e.target.value)}\n                        />\n                    </label>\n                </div>\n            ))}\n            <button type=\"button\" onClick={addQuestionField}>\n                Add More Questions\n            </button>\n            <button type=\"submit\">Submit Questions</button>\n        </form>\n    );\n};\n\nexport default QuestionsForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAExD,MAAMO,YAAY,GAAGA,CAACC,KAAa,EAAEC,KAAa,KAAK;IACnD,MAAMC,YAAY,GAAG,CAAC,GAAGL,SAAS,CAAC;IACnCK,YAAY,CAACF,KAAK,CAAC,GAAGC,KAAK;IAC3BH,YAAY,CAACI,YAAY,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BL,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE,EAAE,CAAC,CAAC;EACpC,CAAC;EAED,MAAMO,YAAY,GAAIC,KAAsB,IAAK;IAC7CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;EAC1B,CAAC;EAED,oBACIH,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAAAM,QAAA,GACxBb,SAAS,CAACc,GAAG,CAAC,CAACC,QAAQ,EAAEZ,KAAK,kBAC3BN,OAAA;MAAAgB,QAAA,eACIhB,OAAA;QAAAgB,QAAA,GAAO,WACM,EAACV,KAAK,GAAG,CAAC,EAAC,GACpB,eAAAN,OAAA;UACImB,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAEW,QAAS;UAChBE,QAAQ,EAAGC,CAAC,IAAKhB,YAAY,CAACC,KAAK,EAAEe,CAAC,CAACC,MAAM,CAACf,KAAK;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,GARFpB,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACR,CAAC,eACF1B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAACQ,OAAO,EAAElB,gBAAiB;MAAAO,QAAA,EAAC;IAEjD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEf,CAAC;AAACxB,EAAA,CAvCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}